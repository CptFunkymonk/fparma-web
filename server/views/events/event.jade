mixin makeGroup(grp, eventCompleted)
  .column
    .ui.raised.segment
      h4.ui.dividing.header(class=grp.is_full ? 'disabled': '')
        i.icon(class=grp.units.length > 1 ? 'users': 'user', class='#{sideColor[grp.side]}')
        .content=grp.name
      .ui.divided.list
        each unit in grp.units
          +makeUnit(unit, eventCompleted)

mixin makeUnit(unit, eventCompleted)
  .js-slot-item.item(data-id=unit.id)
    if (unit.user_id)
      .ui.right.floated.content
        if (!eventCompleted && locals.user.steam_id === unit.user_id)
          .js-slot-unreserve.ui.tiny.basic.button.icon(title='Leave slot')
              i.ui.red.remove.user.icon
        else if (!eventCompleted  && locals.user.admin)
          .js-slot-kick.ui.tiny.basic.button.icon(title='Kick user')
            i.ui.red.legal.icon
      i.middle.aligned.user.icon(class = locals.user.steam_id === unit.user_id ? 'green' : 'grey')
      .content
        .header=unit.description
        .description=unit.user_name
    else
      .ui.right.floated.content
        if (!eventCompleted)
          .js-slot-reserve.ui.basic.tiny.button.icon(title='Take slot')
              i.ui.green.add.user.icon
      i.middle.aligned.user.icon
      .content
        .header=unit.description


extends ../layout

block content
  if (!event.completed)
    input#js-event-id(type='hidden', value=event.id)
  .ui.container.segment(id=event.completed ? '': 'js-event-slots')
    if (event.image_url)
      img.ui.massive.centered.rounded.image(src=event.image_url alt='Event image')
    #event-description.ui.list.mt-top2
      h1.item= event.name
      span.item by: #{event.authors}
      span.item.mt-top1 Type: #{event.type.toUpperCase()}
      span.item Available slots: #{slots.total - slots.taken + ' / ' + slots.total}
      span.item Time: #{event.display_date + ' (UTC)'}
    .ui.raised.segment.mt-top2
      h4 Event description
      span.keep-format=event.description

    h2 Slots
    p Please consider filling groups before taking a slot in an empty group.

    -list=['blufor', 'greenfor', 'opfor', 'civilian']
    -sideColor = {blufor: 'blue', opfor: 'red', greenfor: 'green', civilian: 'purple'}
    each side in list
      -grps = event.groups.filter(function (v) {return v.side === side})
      if (grps.length)
        h3.ui.dividing.header.mt-top2(
          class="#{sideColor[side]} text") #{side.toUpperCase() + ' groups'}
        .mt-top1.ui.three.column.doubling.stackable.grid.container
          each grp in grps
            +makeGroup(grp, event.completed)
