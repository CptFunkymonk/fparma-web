extends ../layout

block content
  input#js-event-id(type='hidden', value=event.id)
  #js-event-slots.ui.container.segment
    .ui.list
      h1.item= event.name
      span.item Type: #{event.type.toUpperCase()}
      span.item Available slots: #{slots.total - slots.taken + ' / ' + slots.total}
      span.item Time: #{time + ' (UTC)'}
    .ui.raised.segment.mt-top2
      h4 Event description
      span= event.description

    h2 Slots
    -list=['blufor', 'greenfor', 'opfor', 'civilian']
    -sideColor = {blufor: 'blue', opfor: 'red', greenfor: 'green', civilian: 'purple'}
    each side in list
      -grps = event.groups.filter(function (v) {return v.side === side})
      if (grps.length)
        h3.ui.dividing.header.mt-top2(
          class="#{sideColor[side]} text") #{side.toUpperCase() + ' groups'}
        .mt-top1.ui.three.column.doubling.stackable.grid.container
          each grp in grps
            .column
              .ui.raised.segment
                h4.ui.dividing.header=grp.name
                .ui.relaxed.divided.animated.list
                  each unit in grp.units
                    .item
                      if (unit.user_name)
                        i.js-taken-slot.middle.aligned.grey.user.icon(data-id=unit.id)
                        .content
                          .header=unit.description
                          .description=unit.user_name
                      else

                        i.js-claim-slot.middle.aligned.green.add.user.icon.link(
                          data-id=unit.id, title='Claim slot')
                        .content
                          .header=unit.description
